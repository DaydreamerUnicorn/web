"use strict";(self.webpackChunkdocusaurus_template=self.webpackChunkdocusaurus_template||[]).push([[641],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},10334:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"contributing",title:"Contributing to Ory"},l=void 0,p={unversionedId:"ecosystem/contributing",id:"ecosystem/contributing",isDocsHomePage:!1,title:"Contributing to Ory",description:"For an introduction to contributions please refer to the specific project, for",source:"@site/docs/ecosystem/contributing.md",sourceDirName:"ecosystem",slug:"/ecosystem/contributing",permalink:"/docs/ecosystem/contributing",editUrl:"https://github.com/ory/docs/edit/master/docs/docs/ecosystem/contributing.md",tags:[],version:"current",lastUpdatedBy:"aeneasr",lastUpdatedAt:1637916018,formattedLastUpdatedAt:"11/26/2021",frontMatter:{id:"contributing",title:"Contributing to Ory"},sidebar:"docs",previous:{title:"Logs and Audit Trails",permalink:"/docs/ecosystem/logging"},next:{title:"Software Quality Assurance",permalink:"/docs/ecosystem/sqa"}},d=[{value:"Releasing Software",id:"releasing-software",children:[{value:"Defining Release Config",id:"defining-release-config",children:[{value:"Goreleaser",id:"goreleaser",children:[],level:4}],level:3},{value:"Update install script",id:"update-install-script",children:[],level:3},{value:"CircleCI",id:"circleci",children:[],level:3}],level:2},{value:"CI",id:"ci",children:[{value:"ory/nancy",id:"orynancy",children:[],level:3}],level:2},{value:"Toolchain",id:"toolchain",children:[{value:"Checking for vulnerabilities",id:"checking-for-vulnerabilities",children:[{value:"NodeJS",id:"nodejs",children:[],level:4},{value:"Go",id:"go",children:[],level:4}],level:3},{value:"Pinning indirect go module dependencies.",id:"pinning-indirect-go-module-dependencies",children:[],level:3}],level:2},{value:"Development",id:"development",children:[{value:"DBAL gobuffalo/pop",id:"dbal-gobuffalopop",children:[{value:"Table Names",id:"table-names",children:[],level:4}],level:3},{value:"SQL Migrations",id:"sql-migrations",children:[],level:3}],level:2},{value:"OpenAPI Spec and Go Swagger",id:"openapi-spec-and-go-swagger",children:[{value:"Models",id:"models",children:[],level:3},{value:"Routes",id:"routes",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Responses",id:"responses",children:[],level:4}],level:3}],level:2},{value:"IDE Tips",id:"ide-tips",children:[{value:"Goland",id:"goland",children:[{value:"Tests",id:"tests",children:[],level:4}],level:3},{value:"Jetbrains",id:"jetbrains",children:[{value:"Debugging Tests",id:"debugging-tests",children:[],level:4}],level:3},{value:"VS Code",id:"vs-code",children:[{value:"Tests",id:"tests-1",children:[],level:4}],level:3}],level:2}],c={toc:d};function u(e){var t=e.components,s=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For an introduction to contributions please refer to the specific project, for\nexample the\n",(0,i.kt)("a",{parentName:"p",href:"https://www.ory.sh/kratos/docs/contributing/"},"Contribution Guidelines for Ory Kratos"),"."))),(0,i.kt)("p",null,"This document is a work in progress and documents the inner workings of the Ory\nGitHub ecosystem and project structures, as well as providing more in-depth tips\n& guides to contributors. If you feel there is something missing or should be\nadded, please open an issue in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/docs"},"ory/docs")," or\ncontact us in the ",(0,i.kt)("a",{parentName:"p",href:"https://www.ory.sh/chat"},"Ory Chat"),". We also offer discussions\non GitHub for all major projects:\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/kratos/discussions"},"Ory Kratos"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/hydra/discussions"},"Ory Hydra"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/keto/discussions"},"Ory Keto"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/oathkeeper/discussions/"},"Ory Oathkeeper"),", as well as one\nfor all other Ory projects, events and content:\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/meta/discussions"},"Ory Meta discussions"),"."),(0,i.kt)("h2",{id:"releasing-software"},"Releasing Software"),(0,i.kt)("p",null,"To release a project, run the following bash command in the root of the project\nyou would like to release. The first argument can be one of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"patch")," bumps ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.4")," (does not work for pre-releases such as\n",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3-beta.1"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"minor")," bumps ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.3.0")," (does not work for pre-releases such as\n",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3-beta.1"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"major")," bumps ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"v2.0.0")," (does not work for pre-releases such as\n",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3-beta.1"),")"),(0,i.kt)("li",{parentName:"ul"},"Any ",(0,i.kt)("a",{parentName:"li",href:"https://semver.org"},"semver-valid")," version, for example ",(0,i.kt)("inlineCode",{parentName:"li"},"v1.2.3-beta.1"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"release_as=v1.2.3\nbash <(curl -s https://raw.githubusercontent.com/ory/meta/master/scripts/release.sh) $release_as\n")),(0,i.kt)("h3",{id:"defining-release-config"},"Defining Release Config"),(0,i.kt)("p",null,"For the scripts to work, the project must be located in a directory structure\nthat reflects the GitHub organisation and repository name, for example:\n",(0,i.kt)("inlineCode",{parentName:"p"},"path/to/ory/hydra"),"."),(0,i.kt)("h4",{id:"goreleaser"},"Goreleaser"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/goreleaser/goreleaser/releases"},"goreleaser"),"."),(0,i.kt)("p",null,"The listed configuration options should be included in every ",(0,i.kt)("inlineCode",{parentName:"p"},".goreleaser.yml"),"\nconfig. Make sure you set env vars and ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod download")," and run e.g. packr2 and\nother tools first:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title=".goreleaser.yml"',title:'".goreleaser.yml"'},"env:\n  - GO111MODULE=on\n\nbefore:\n  hooks:\n    - go mod download\n    # - go install github.com/gobuffalo/packr/v2/packr2\n    # - packr2\n")),(0,i.kt)("p",null,"Tag ",(0,i.kt)("inlineCode",{parentName:"p"},"-alpha.1")," and other pre-release tags as pre-release on GitHub:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"release:\n  prerelease: auto\n")),(0,i.kt)("p",null,"Name snapshot releases ",(0,i.kt)("inlineCode",{parentName:"p"},"-next"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"snapshot:\n  name_template: '{{ .Tag }}-next'\n")),(0,i.kt)("p",null,"If you create a new goreleaser config, you may also want to create the following\nempty GitHub repositories:"),(0,i.kt)("p",null,"Build and publish on Docker. You need to create a repository on Docker Hub\nfirst!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Build dockerfiles\ndockers:\n  - dockerfile: Dockerfile\n    binaries:\n      - $PROJECT_NAME\n    image_templates:\n      - 'oryd/$PROJECT_NAME:v{{ .Major }}'\n      - 'oryd/$PROJECT_NAME:v{{ .Major }}.{{ .Minor }}'\n      - 'oryd/$PROJECT_NAME:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}'\n      - 'oryd/$PROJECT_NAME:latest'\n")),(0,i.kt)("p",null,"If you add ",(0,i.kt)("a",{parentName:"p",href:"https://scoop.sh"},"Scoop")," (Homebrew for Windows) you must also create\na GitHub repository under the ",(0,i.kt)("inlineCode",{parentName:"p"},"ory")," org named ",(0,i.kt)("inlineCode",{parentName:"p"},"scoop-$PROJECT_NAME")," (e.g.\n",(0,i.kt)("inlineCode",{parentName:"p"},"scoop-hydra"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"scoop:\n  bucket:\n    owner: ory\n    name: scoop-$PROJECT_NAME\n  homepage: https://www.ory.sh\n  commit_author:\n    name: aeneasr\n    email: aeneas@ory.sh\n")),(0,i.kt)("p",null,"If you add ",(0,i.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew")," you must also create a GitHub repository\nunder the ",(0,i.kt)("inlineCode",{parentName:"p"},"ory")," org named ",(0,i.kt)("inlineCode",{parentName:"p"},"homebrew-$PROJECT_NAME")," (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"homebrew-hydra"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"brews:\n  - github:\n      owner: ory\n      name: homebrew-$PROJECT_NAME\n    ids:\n      - <<REPLACE-WITH-ARCHIVE-ID>>\n    homepage: https://www.ory.sh\n    commit_author:\n      name: aeneasr\n      email: aeneas@ory.sh\n")),(0,i.kt)("p",null,"We use the following replacements:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"archives:\n  - replacements:\n      darwin: macOS\n      386: 32-bit\n      amd64: 64-bit\n    format_overrides:\n      - goos: windows\n        format: zip\n")),(0,i.kt)("h3",{id:"update-install-script"},"Update install script"),(0,i.kt)("p",null,"When you have finalized changes to the ",(0,i.kt)("inlineCode",{parentName:"p"},".goreleaser.yml"),", run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ GO111MODULES=off go get -u github.com/goreleaser/godownloader\n$ godownloader .goreleaser.yml --repo=$(basename $(dirname $(pwd)))/$(basename $(pwd)) > ./install.sh\n")),(0,i.kt)("h3",{id:"circleci"},"CircleCI"),(0,i.kt)("p",null,"Define CI Environment Variables:"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Make sure you set ",(0,i.kt)("inlineCode",{parentName:"li"},"GITHUB_TOKEN")," in the project's CI config."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Make sure you set ",(0,i.kt)("inlineCode",{parentName:"li"},"MAILCHIMP_API_KEY")," in the project's CI config."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Make sure you set ",(0,i.kt)("inlineCode",{parentName:"li"},"DOCKER_USER")," in the project's CI config."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Make sure you set ",(0,i.kt)("inlineCode",{parentName:"li"},"DOCKER_TOKEN")," in the project's CI config.")),(0,i.kt)("p",null,"In the project's CircleCI config (",(0,i.kt)("inlineCode",{parentName:"p"},".circleci/config.yml"),"), use the following\nworkflow (please use an appropriate ",(0,i.kt)("inlineCode",{parentName:"p"},"$VERSION"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"orbs:\n  goreleaser: ory/goreleaser@0.1.7\n  slack: circleci/slack@3.4.2\n\nworkflows:\n  my-workflow:\n    jobs:\n      - goreleaser/test:\n          filters:\n            tags:\n              only: /.*/\n      - goreleaser/release:\n          requires:\n            - goreleaser/test\n          filters:\n            branches:\n              ignore: /.*/\n            tags:\n              only: /.*/\n\n      - goreleaser/newsletter-draft:\n          chimp-list: f605a41b53\n          chimp-segment: 6478605\n          requires:\n            - goreleaser/release\n          filters:\n            tags:\n              only: /.*/\n      - slack/approval-notification:\n          message: Pending approval\n          channel: release-automation\n          requires:\n            - goreleaser/newsletter-draft\n          filters:\n            tags:\n              only: /.*/\n      - newsletter-approval:\n          type: approval\n          requires:\n            - goreleaser/newsletter-draft\n          filters:\n            tags:\n              only: /.*/\n      - goreleaser/newsletter-send:\n          chimp-list: f605a41b53\n          requires:\n            - newsletter-approval\n          filters:\n            tags:\n              only: /.*/\n")),(0,i.kt)("h2",{id:"ci"},"CI"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"http://github.com/ory/ci"},"our own CircleCI Orbs"),":"),(0,i.kt)("h3",{id:"orynancy"},"ory/nancy"),(0,i.kt)("p",null,"Enables nancy vulnerability scanning for the repository."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"orbs:\n  nancy: ory/nancy@0.0.9\n\nworkflows:\n  test:\n    jobs:\n      - nancy/test:\n        filters:\n          tags:\n            only: /.*/\n")),(0,i.kt)("h2",{id:"toolchain"},"Toolchain"),(0,i.kt)("h3",{id:"checking-for-vulnerabilities"},"Checking for vulnerabilities"),(0,i.kt)("h4",{id:"nodejs"},"NodeJS"),(0,i.kt)("p",null,"This is done automatically by GitHub"),(0,i.kt)("h4",{id:"go"},"Go"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Outside of a go module-enabled project:\n$ go get -u github.com/sonatype-nexus-community/nancy\n\n# Inside your go module-enabled project:\n$ go mod list -m all | nancy\n")),(0,i.kt)("h3",{id:"pinning-indirect-go-module-dependencies"},"Pinning indirect go module dependencies."),(0,i.kt)("p",null,"Sometimes a project has an indirect dependency (another dependency requires that\ndependency) which does not pass, for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"nancy")," vulnerability scanning.\nBecause it's not possible to pin this dependency to a specific version, we need\nto explicitly require it. But because it's not directly required by our code, it\nwill be pruned when using ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod tidy"),". To prevent that, create a file which\nimports the dependency without use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:'language-title="go_mod_indirect_pins.go'},'// +build go_mod_indirect_pins\n\npackage main\n\nimport _ "github.com/my/dependency"\n')),(0,i.kt)("p",null,"You would do the same if the project uses dev tools such as ",(0,i.kt)("inlineCode",{parentName:"p"},"packr2"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"goimports"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"goreturns"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"swagutil"),", ... as part of e.g. the Makefile or other\nscripts."),(0,i.kt)("h2",{id:"development"},"Development"),(0,i.kt)("h3",{id:"dbal-gobuffalopop"},"DBAL gobuffalo/pop"),(0,i.kt)("h4",{id:"table-names"},"Table Names"),(0,i.kt)("p",null,"Please define custom table names for all table structs. Keep in mind that\n",(0,i.kt)("inlineCode",{parentName:"p"},"TableName()")," must be a value receiver, not a pointer receiver, for slices\n",(0,i.kt)("inlineCode",{parentName:"p"},"[]Model")," to work properly:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'-func (m *Model) TableName(ctx context.Context) string {\n+func (m Model) TableName(ctx context.Context) string {\n    return "foo"\n}\n')),(0,i.kt)("h3",{id:"sql-migrations"},"SQL Migrations"),(0,i.kt)("p",null,"Ory uses a lightweight DBAL across all projects that require a database. This\nDBAL is typically stored in the ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence/")," directory. Since we only support\nSQL at the moment - there are no plans to add new databases and contributions\nwill not be accepted due to maintenance effort - you will find the\nimplementation in ",(0,i.kt)("inlineCode",{parentName:"p"},"persistence/sql"),"."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This section currently only applies to Ory Kratos and Ory Keto. Ory Hydra is\ncurrently using an approach that does not rely on fizz migrations. Please\ndiscuss with maintainers before making changes to Ory Hydra SQL schemata."))),(0,i.kt)("p",null,"In order to provide a process to upgrade SQL schemata, we use migrations. These\nmigrations are generated using the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gobuffalo/fizz"},"fizz language")," and then rendered to SQL\nusing the Ory CLI."),(0,i.kt)("p",null,'This is necessary because there are differences between the SQL "dialects" of\nSQLite (does not support certain ',(0,i.kt)("inlineCode",{parentName:"p"},"ALTER TABLE")," statements for example),\nPostgreSQL, MySQL, and CockroachDB."),(0,i.kt)("p",null,"To change the schema, create a new fizz template using:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# In the project root - e.g. /kratos\n$ make .bin/ory\n\n# If make .bin/ory fails use:\n# $ make .bin/cli\n#\n# and replace `.bin/ory` with `.bin/cli`.\n# We are working on streamlining this\n# across all repos.\n\n$ .bin/ory dev pop migration create persistence/sql/migrations/templates descriptive_change\n")),(0,i.kt)("p",null,"This will create two new files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ls -la persistence/sql/migrations/templates | tail -n 2\n-rw-r--r--   1 foobar  staff      0 Apr 28 17:25 20210428172500_descriptive_change.down.fizz\n-rw-r--r--   1 foobar  staff      0 Apr 28 17:25 20210428172500_descriptive_change.up.fizz\n")),(0,i.kt)("p",null,"Add you fizz migrations there. The ",(0,i.kt)("inlineCode",{parentName:"p"},"up")," file is for applying your schema\nchanges, the ",(0,i.kt)("inlineCode",{parentName:"p"},"down")," file for reverting them."),(0,i.kt)("p",null,"Once your migrations are added, it is time to render them to SQL. Make sure that\nDocker is running and execute:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ .bin/ory dev pop migration render persistence/sql/migrations/templates persistence/sql/migrations/sql\n")),(0,i.kt)("p",null,"If you encounter errors you can also try running this with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--replace"),"\noption but please let maintainers know that you used ",(0,i.kt)("inlineCode",{parentName:"p"},"--replace")," in your PR:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ .bin/ory dev pop migration render --replace persistence/sql/migrations/templates persistence/sql/migrations/sql\n")),(0,i.kt)("p",null,"This will render your migrations to SQL files. Add them to git (",(0,i.kt)("inlineCode",{parentName:"p"},"git add -A"),")\nand commit them."),(0,i.kt)("p",null,"Next, you need to update the migration tests. To do so, run the sync command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ .bin/ory dev pop migration sync persistence/sql/migrations/templates persistence/sql/migratest/testdata\n")),(0,i.kt)("p",null,"This will add create a new SQL file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ ls -la  persistence/sql/migratest/testdata | tail -n 1\n-rw-r--r--   1 foobar  staff      0 Apr 28 17:28 20210428172500_testdata.sql\n")),(0,i.kt)("p",null,"Add an ",(0,i.kt)("inlineCode",{parentName:"p"},"INSERT")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"UPDATE")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," statement that reflects the changes you\nhave made to the schema to the file. Let's say you added a new column\n",(0,i.kt)("inlineCode",{parentName:"p"},"new_column")," to table ",(0,i.kt)("inlineCode",{parentName:"p"},"bar"),". In that case, write an ",(0,i.kt)("inlineCode",{parentName:"p"},"INSERT")," statement that\nreflects this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"INSERT INTO bar (old_column, new_column) VALUES ('foo', 'bar');\n")),(0,i.kt)("p",null,"Next, execute the tests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ cd persistence/sql/migratest\n$ go test -tags sqlite ./...\n")),(0,i.kt)("p",null,"The tests will probably fail because the fixtures need to be updated. To update\nthem, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ cd persistence/sql/migratest\n$ go test -tags sqlite,refresh -short .\n")),(0,i.kt)("p",null,"You might need to run the ",(0,i.kt)("inlineCode",{parentName:"p"},"go test")," command two or three times before all\nfixtures have been updated."),(0,i.kt)("p",null,"That's it! :)"),(0,i.kt)("h2",{id:"openapi-spec-and-go-swagger"},"OpenAPI Spec and Go Swagger"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://goswagger.io"},"go-swagger")," to generate OpenAPI Spec from source\ncode. Here you can find conventions we use across the code base."),(0,i.kt)("h3",{id:"models"},"Models"),(0,i.kt)("p",null,"Models should have a descriptive title, a body, and be camelCase. It is good\npractice to scope the model where needed."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"package some\n\n// Title\n//\n// A description with a trailing dot.\n//\n// swagger:model someSpecificModel\ntype SpecificModel struct {}\n")),(0,i.kt)("h3",{id:"routes"},"Routes"),(0,i.kt)("p",null,"Routes should use tags for versioning. If a route is accessible through a\nprivileged port (e.g. admin) it should be prefixed with ",(0,i.kt)("inlineCode",{parentName:"p"},"admin"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// swagger:route POST /identities v0alpha1 adminCreateIdentity\n")),(0,i.kt)("p",null,"Public endpoints do not need a prefix."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// swagger:route POST /something-public v0alpha1 somethingPublic\n")),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,"Parameters for routes should have the same name as the route. If they have a\nbody, you must not use an embedded struct and the struct's model name should be\nsuffixed ",(0,i.kt)("inlineCode",{parentName:"p"},"Body"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// swagger:parameters adminCreateIdentity\n// nolint:deadcode,unused\ntype adminCreateIdentity struct {\n    // in: body\n    Body adminCreateIdentityBody\n}\n\n// swagger:model adminCreateIdentityBody\ntype adminCreateIdentityBody struct {\n    // SchemaID is the ID of the JSON Schema to be used for validating the identity\'s traits.\n    //\n    // required: true\n    SchemaID string `json:"schema_id"`\n\n    // Traits represent an identity\'s traits. The identity is able to create, modify, and delete traits\n    // in a self-service manner. The input will always be validated against the JSON Schema defined\n    // in `schema_url`.\n    //\n    // required: true\n    Traits json.RawMessage `json:"traits"`\n}\n\n// swagger:route POST /identities v0alpha1 adminCreateIdentity\n')),(0,i.kt)("h4",{id:"responses"},"Responses"),(0,i.kt)("p",null,"Where possible use models for responses."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"// A list of identities.\n// swagger:model identityList\n// nolint:deadcode,unused\ntype identityList []Identity\n\n// swagger:route GET /identities v0alpha0 adminListIdentities\n//\n// List Identities\n//\n// Lists all identities. Does not support search at the moment.\n//\n// Learn how identities work in [Ory Kratos' User And Identity Schema Documentation](https://www.ory.sh/docs/next/kratos/concepts/identity-user-model).\n//\n//     Produces:\n//     - application/json\n//\n//     Schemes: http, https\n//\n//     Responses:\n//       200: identityList\n//       500: jsonError\n")),(0,i.kt)("h2",{id:"ide-tips"},"IDE Tips"),(0,i.kt)("h3",{id:"goland"},"Goland"),(0,i.kt)("h4",{id:"tests"},"Tests"),(0,i.kt)("p",null,"While running tests inside the IDE make sure you have the tag ",(0,i.kt)("inlineCode",{parentName:"p"},"-tags sqlite"),' in\nthe "Go Tool Arguments". In the example screenshot we are looking at\n',(0,i.kt)("inlineCode",{parentName:"p"},"login_test.go")," and add it to the Run/Debug Configurations."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Go Tool Arguments Configuration Screenshot",src:n(42793).Z})),(0,i.kt)("h3",{id:"jetbrains"},"Jetbrains"),(0,i.kt)("h4",{id:"debugging-tests"},"Debugging Tests"),(0,i.kt)("p",null,"Jetbrains IDEs have an SQL debugger, that can open sqlite files. When debugging\ntests, you can set a bool flag to use an sqlite file instead of in-mem and then\ndebug after the test failed.\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ory/keto/pull/638/files#diff-19d74043bd6f4fd4ffaf6dee2895a42da0a754b6135339343117614974ff6182R84"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func GetSqlite(t testing.TB, mode sqliteMode) *DsnT {\n    dsn := &DsnT{\n        MigrateUp:   true,\n        MigrateDown: false,\n    }\n\n    switch mode {\n    case SQLiteMemory:\n        dsn.Name = "memory"\n        dsn.Conn = fmt.Sprintf("sqlite://file:%s?_fk=true&cache=shared&mode=memory", t.Name())\n    case SQLiteFile:\n        t.Cleanup(func() {\n            _ = os.Remove("TestDB.sqlite")\n        })\n        fallthrough\n    case SQLiteDebug:\n        dsn.Name = "sqlite"\n        dsn.Conn = "sqlite://file:TestDB.sqlite?_fk=true"\n    }\n\n    return dsn\n}\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Screenshot of Jetbrains SQL debugger, Fast!",src:n(85790).Z})),(0,i.kt)("p",null,"To transfer the above to Kratos:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Change the DSN to the following:\n",(0,i.kt)("inlineCode",{parentName:"li"},'dsn.Conn = "sqlite://file:TestDB.sqlite?_fk=true"'),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mode=memor"),"."),(0,i.kt)("li",{parentName:"ul"},"In case you have an sqlite file, migrators are not automatically applied. Run\nthem manually first with the\n",(0,i.kt)("a",{parentName:"li",href:"https://www.ory.sh/kratos/docs/cli/kratos-migrate-sql"},"CLI"),".")),(0,i.kt)("h3",{id:"vs-code"},"VS Code"),(0,i.kt)("h4",{id:"tests-1"},"Tests"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Under Settings, search for ",(0,i.kt)("inlineCode",{parentName:"li"},"Go: Test Tags"),"."),(0,i.kt)("li",{parentName:"ul"},"Click Edit in ",(0,i.kt)("inlineCode",{parentName:"li"},"settings.json"),".\n",(0,i.kt)("img",{alt:"Screenshot of VSCode Search",src:n(42485).Z})),(0,i.kt)("li",{parentName:"ul"},"Add the following KV to the ",(0,i.kt)("inlineCode",{parentName:"li"},"settings.json"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'"go.testTags": "sqlite",'),".\n",(0,i.kt)("img",{alt:"Screenshot of VScode settings.json",src:n(84527).Z}))))}u.isMDXComponent=!0},42793:function(e,t,n){t.Z=n.p+"assets/images/goland-config-95d3e7d91de0ed00086a14b4021700b1.png"},85790:function(e,t,n){t.Z=n.p+"assets/images/jetbrains-config-bc5e10bef611c50b3d8ab2e6f9ff2c84.png"},42485:function(e,t,n){t.Z=n.p+"assets/images/vscode-search-4514f5880a64f01a2ac81b2598ce9b77.png"},84527:function(e,t,n){t.Z=n.p+"assets/images/vscode-settings-1d5be371a4d4022fd82f2b41a631e28e.png"}}]);